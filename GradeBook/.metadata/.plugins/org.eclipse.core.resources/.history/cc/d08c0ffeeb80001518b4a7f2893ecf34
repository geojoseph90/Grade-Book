package com.gradebook.factories;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.gradebook.DO.AssignedWork;
import com.gradebook.DO.GeneralGradeBook;
import com.gradebook.DO.GradeBook;
import com.gradebook.DO.Student;

public class NumberGradeCalculator implements GradeCalculator{
	private Map<String,List<Integer>> gradedWorkMap = new HashMap<String,List<Integer>>();
	private MarkComputerFactory markComputerFactory = new MarkComputerFactory();
	private MarkComputer markComputer = null;
	private String category = null;
	private double marks = 0;
	public boolean calculateGrade(GeneralGradeBook gradeBook) {
	 /*List<Student> studentList = gradeBook.getGeneralGradingSchema().ge
		for(Student student : studentList) {
			
			List<AssignedWork> assignedWorkList = student.getAssignedWork();
			for(AssignedWork assignedWork : assignedWorkList) {
				//category = assignedWork.getCategory();
				List<Integer> markList = null;
				/*for(GradedWork gradedWork : assignedWork.getGradedWork()) {
					markList.add(Integer.valueOf(gradedWork.getGrade()));
				}*/
				/*gradedWorkMap.put(category,markList);
				markComputer = markComputerFactory.getMarkComputer(category);
				marks =  markComputer.computeFinalGrade(markList);
			
			}
			
		}*/
		//student.setFinalGrade(String.valueOf(marks));
		
		return true;
	
	}
	@Override
	public boolean calculateGrade(GradeBook gradeBook) {
		// TODO Auto-generated method stub
		return false;
	}

}
