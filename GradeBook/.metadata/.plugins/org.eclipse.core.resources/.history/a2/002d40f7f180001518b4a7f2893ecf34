package com.gradebook.factories;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.gradebook.DO.GeneralAssignedWork;
import com.gradebook.DO.GeneralGradeBook;
import com.gradebook.DO.GeneralGradeItem;
import com.gradebook.DO.GeneralGradedWork;
import com.gradebook.DO.GeneralGrades;
import com.gradebook.DO.GeneralGradingSchema;
import com.gradebook.DO.GeneralStudent;

public class LetterGradeCalculator implements GradeCalculator{
	public GeneralGradeBook calculateGrade(GeneralGradeBook gradeBook) {
		GeneralGradingSchema generalGradingSchema = gradeBook.getGeneralGradingSchema();
		Map<String,Integer> gradingMap = new HashMap<String,Integer>();
		for(GeneralGradeItem gradeItem : generalGradingSchema.getGradeItemList()) {
			gradingMap.put(gradeItem.getCategory(), gradeItem.getPrecentage());
			
		}
		
		List<GeneralGradeItem> generalGradingItem = generalGradingSchema.getGradeItemList();
		GeneralGrades generalGrades = gradeBook.getGeneralGrades();
		List<GeneralStudent> generalStudentList = generalGrades.getGeneralStudent();
		for(GeneralStudent generalStudent : generalStudentList) {
			String finalGrade = null;
			
			List<GeneralAssignedWork> generalAssignedWorkList = generalStudent.getGeneralAssignedWork();
			for(GeneralAssignedWork generalAssignedWork : generalAssignedWorkList) {
				for(GeneralGradedWork generalGradedWork : generalAssignedWork.getGeneralGradedWork()) {
					if(gradingMap.containsKey(generalGradedWork.getName())) {
						int percentage = gradingMap.get(generalGradedWork.getName());
						float grade = Float.valueOf(generalGradedWork.getGrade());
						float weightedGrade = grade*(percentage/100);
						totalMarks += weightedGrade;
					}
					else {
						System.out.println("Please check the data file");
						return null;
					}
				}
				
			}
			finalGrade = totalMarks;
			generalStudent.setFinalGrade(String.valueOf(finalGrade));
		}
		
		return new  GeneralGradeBook();
	}

}
