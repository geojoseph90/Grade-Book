package com.gradebook.factories;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.gradebook.DO.GeneralAssignedWork;
import com.gradebook.DO.GeneralGradeBook;
import com.gradebook.DO.GeneralGradeItem;
import com.gradebook.DO.GeneralGradedWork;
import com.gradebook.DO.GeneralGrades;
import com.gradebook.DO.GeneralGradingSchema;
import com.gradebook.DO.GeneralStudent;
import com.gradebook.DO.GradeItem;

public class HTMLGradebookGenerator implements GradebookGenerator {

	@Override
	public boolean generateGradebook(GeneralGradeBook generalGradeBook) {
		 String fileName = "/Users/geo/Desktop/TestFiles/HTMLFile.html";
		generalGradeBook.setClassNumber("CSE 598");
		 List<GeneralGradeItem> giList = new ArrayList<GeneralGradeItem>();
		 GeneralGradeItem gi = new GeneralGradeItem();
		 gi.setCategory("Programming Assignment");
		 gi.setPrecentage(70);
		 giList.add(gi);
		 GeneralGradingSchema gs = new GeneralGradingSchema();
		 gs.setGradeItemList(giList);
		 GeneralGrades grade = new GeneralGrades();
		 generalGradeBook.setGeneralGradingSchema(gs);
		 List<GeneralStudent> st = new ArrayList<GeneralStudent>();
		 GeneralStudent stud = new GeneralStudent();
		 List<GeneralAssignedWork> assignedWork = new  ArrayList<GeneralAssignedWork>();
		 List<GeneralGradedWork> genGradWork = new  ArrayList<GeneralGradedWork>();
		 GeneralGradedWork ggw = new GeneralGradedWork();
		 ggw.setGrade("A");
		 ggw.setName("Abott");
		 GeneralAssignedWork genAssiWork = new GeneralAssignedWork();
		 
		 genGradWork.add(ggw);
		 genAssiWork.setGeneralGradedWork(genGradWork);
		 genAssiWork.setCategory("Assignment");
		 assignedWork.add(genAssiWork);
		 
		 stud.setGeneralAssignedWork(assignedWork);
		 stud.setStudentName("Geo");
		 stud.setStudentId("1234");
		 st.add(stud);
		 grade.setGeneralStudent(st);
		 generalGradeBook.setGeneralGrades(grade);
		 
		 
		StringBuilder outputString = new StringBuilder();
		outputString.append("<html>");
		outputString.append("<head>");
		outputString.append("</head>");
		outputString.append("<table>");
		outputString.append("<tr style=\"font-weight: bold;height=\"20\";\">");
		outputString.append(appendHeader(generalGradeBook.getGeneralGradingSchema()));
		outputString.append("</tr>");
		
		for(GeneralStudent generalStudent : generalGradeBook.getGeneralGrades().getGeneralStudent()) {
			outputString.append("<tr height=\"20\">");
			outputString.append("<td width=\"100\">");
			outputString.append(generalStudent.getStudentName());
			outputString.append("</td>");
			outputString.append("<td width=\"100\">");
			outputString.append(generalStudent.getStudentId());
			outputString.append("</td>");
			outputString.append(appendColumn(generalStudent));
			outputString.append("</tr>");
			outputString.append("</br>");
		}
		outputString.append("</table>");
		
		
	    try {
	    	FileWriter fstream = new FileWriter(fileName);
		    BufferedWriter out = new BufferedWriter(fstream);
			out.write(outputString.toString());
			out.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	    
		return true;
	}
	
	public StringBuilder appendColumn(GeneralStudent generalStudent) {
		StringBuilder contentRow = new StringBuilder();
		
		for(GeneralAssignedWork assignedWork : generalStudent.getGeneralAssignedWork()) {
			for(GeneralGradedWork gradedWork : assignedWork.getGeneralGradedWork()) {
				contentRow.append("<td width=\"100\">");
				contentRow.append(gradedWork.getGrade());
				contentRow.append("</td>");
			}
			contentRow.append("<td width=\"100\">");
			// get the grades from assignedwork
			contentRow.append("</td>");
		}
		return contentRow;
	}
	
	public StringBuilder appendHeader(GeneralGradingSchema generalGradingSchema) {
		StringBuilder headerRow = new StringBuilder();
		headerRow.append("<td width=\"100\">");
		headerRow.append("Name");
		headerRow.append("</td>");
		headerRow.append("<td width=\"100\">");
		headerRow.append("ID");
		headerRow.append("</td>");
		headerRow.append("<td width=\"100\">");
		for(GeneralGradeItem item : generalGradingSchema.getGradeItemList()) {
			headerRow.append(item.getCategory());
		}
		headerRow.append("</td>");
		headerRow.append("<td width=\"100\">");
		headerRow.append("Grade");
		headerRow.append("</td>");
		
		return headerRow;
		
	}
	
	public static void main(String args[]) {
		
		HTMLGradebookGenerator htmlGen = new HTMLGradebookGenerator();
		htmlGen.generateGradebook(new GeneralGradeBook());
	}
	
}
