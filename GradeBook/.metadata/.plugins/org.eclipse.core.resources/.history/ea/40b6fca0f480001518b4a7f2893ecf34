package com.gradebook.factories;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.gradebook.DO.GeneralAssignedWork;
import com.gradebook.DO.GeneralGradeBook;
import com.gradebook.DO.GeneralGradeItem;
import com.gradebook.DO.GeneralGradedWork;
import com.gradebook.DO.GeneralGrades;
import com.gradebook.DO.GeneralGradingSchema;
import com.gradebook.DO.GeneralStudent;

public class NumberGradeCalculator implements GradeCalculator{
	private Map<String,List<Integer>> gradedWorkMap = new HashMap<String,List<Integer>>();
	private MarkComputerFactory markComputerFactory = new MarkComputerFactory();
	private MarkComputer markComputer = null;
	private String category = null;
	private double marks = 0;
	public GeneralGradeBook calculateGrade(GeneralGradeBook gradeBook) {
	 /*List<Student> studentList = gradeBook.getGeneralGradingSchema().ge
		for(Student student : studentList) {
			
			List<AssignedWork> assignedWorkList = student.getAssignedWork();
			for(AssignedWork assignedWork : assignedWorkList) {
				//category = assignedWork.getCategory();
				List<Integer> markList = null;
				/*for(GradedWork gradedWork : assignedWork.getGradedWork()) {
					markList.add(Integer.valueOf(gradedWork.getGrade()));
				}*/
				/*gradedWorkMap.put(category,markList);
				markComputer = markComputerFactory.getMarkComputer(category);
				marks =  markComputer.computeFinalGrade(markList);
			
			}
			
		}*/
		//student.setFinalGrade(String.valueOf(marks));
		GeneralGradingSchema generalGradingSchema = gradeBook.getGeneralGradingSchema();
		Map<String,Integer> gradingMap = new HashMap<String,Integer>();
		for(GeneralGradeItem gradeItem : generalGradingSchema.getGradeItemList()) {
			gradingMap.put(gradeItem.getCategory(), gradeItem.getPrecentage());
			
		}
		
		List<GeneralGradeItem> generalGradingItem = generalGradingSchema.getGradeItemList();
		GeneralGrades generalGrades = gradeBook.getGeneralGrades();
		List<GeneralStudent> generalStudentList = generalGrades.getGeneralStudent();
		for(GeneralStudent generalStudent : generalStudentList) {
			float finalGrade = 0;
			float totalMarks = 0;
			
			List<GeneralAssignedWork> generalAssignedWorkList = generalStudent.getGeneralAssignedWork();
			for(GeneralAssignedWork generalAssignedWork : generalAssignedWorkList) {
				for(GeneralGradedWork generalGradedWork : generalAssignedWork.getGeneralGradedWork()) {
					if(gradingMap.containsKey(generalGradedWork.getName())) {
						int percentage = gradingMap.get(generalGradedWork.getName());
						float grade = Float.valueOf(generalGradedWork.getGrade());
						float weightedGrade = grade*(percentage/100);
						totalMarks += weightedGrade;
					}
					else {
						System.out.println("Please check the data file");
						return null;
					}
				}
				
			}
			finalGrade = totalMarks;
			generalStudent.setFinalGrade(String.valueOf(finalGrade));
		}
		
		return new GeneralGradeBook();
	
	}
	

}
