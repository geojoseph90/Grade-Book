
package com.gradebook.DO;

import java.util.HashMap;
import java.util.Map;
import javax.annotation.Generated;
import org.codehaus.jackson.annotate.JsonAnyGetter;
import org.codehaus.jackson.annotate.JsonAnySetter;
import org.codehaus.jackson.annotate.JsonIgnore;
import org.codehaus.jackson.annotate.JsonProperty;
import org.codehaus.jackson.annotate.JsonPropertyOrder;
import org.codehaus.jackson.map.annotate.JsonSerialize;

@JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
@Generated("org.jsonschema2pojo")
@JsonPropertyOrder({
    "-category",
    "GradedWork"
})
public class AssignedWork {

    @JsonProperty("-category")
    private String category;
    @JsonProperty("GradedWork")
    private com.gradebook.DO.GradedWork gradedWork;
    @JsonIgnore
    private Map<String, Object> additionalProperties = new HashMap<String, Object>();

    /**
     * 
     * @return
     *     The Category
     */
    @JsonProperty("-category")
    public String getCategory() {
        return category;
    }

    /**
     * 
     * @param Category
     *     The -category
     */
    @JsonProperty("-category")
    public void setCategory(String Category) {
        this.category = Category;
    }

    /**
     * 
     * @return
     *     The GradedWork
     */
    @JsonProperty("GradedWork")
    public com.gradebook.DO.GradedWork getGradedWork() {
        return gradedWork;
    }

    /**
     * 
     * @param GradedWork
     *     The GradedWork
     */
    @JsonProperty("GradedWork")
    public void setGradedWork(com.gradebook.DO.GradedWork GradedWork) {
        this.gradedWork = GradedWork;
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    @JsonAnySetter
    public void setAdditionalProperty(String name, Object value) {
        this.additionalProperties.put(name, value);
    }

}
