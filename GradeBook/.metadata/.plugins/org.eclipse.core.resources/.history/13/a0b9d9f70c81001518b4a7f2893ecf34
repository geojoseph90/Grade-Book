package com.gradebook.factories;

import java.io.File;

import com.gradebook.DO.GeneralGradeBook;
import com.gradebook.DO.GeneralGrades;
import com.gradebook.DO.Student;
import com.gradebook.DO.GradeBook;

public class GraduateGradebookFactory extends  GradebookFactory {
	
	private static String defaultFileLocation = new File("").getAbsolutePath();

	@Override
	public GeneralGradeBook readGrades(String fileType) {
		
		
		FileParserFactory fileParserFactory = new FileParserFactory();
		FileParser fileParser = fileParserFactory.getParser(fileType);
		GeneralGradeBook gradeBook = fileParser.parseFile(defaultFileLocation);
		if(gradeBook != null) {
			gradeBook = calcuateGrades(gradeBook);
			return gradeBook;
		}
		else {
			return null;
		}
		
	}

	@Override
	public GeneralGradeBook calcuateGrades(GeneralGradeBook gradeBook) {
		
		GradeCalculatorFactory gradeCalculatorFactory = new GradeCalculatorFactory();
		GradeCalculator gradeCalculator = gradeCalculatorFactory.getGradeCalculator(gradeBook.getGeneralGradeType());
		if(gradeCalculator != null) {
			gradeBook = gradeCalculator.calculateGrade(gradeBook);
			return gradeBook;
		}
		else {
			return null;
		}
		
	}

	@Override
	public String generateGradebook(GeneralGradeBook gradeBook) {
		GradebookGeneratorFactory gradeGeneratorFactory = new GradebookGeneratorFactory();
		GradebookGenerator gradebookGenerator = gradeGeneratorFactory.generateGradeGenerator(gradeBook.getGeneralOutputType());
		if(gradebookGenerator != null) {
			gradebookGenerator.generateGradebook(gradeBook);
		}
		else {
			System.out.println("Unknown output type");
		}
		return null;
	}

	public boolean validateDO(GeneralGradeBook gradeBook) {
		// the method checks whether proper values are present in the database
		return true;
	}
	public static void main(String args[]) {
		GraduateGradebookFactory gradebook = new GraduateGradebookFactory();
		gradebook.readGrades("XML");
	}


}
