package com.gradebook.client;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.gradebook.factories.FactoryProducer;
import com.gradebook.factories.GradebookFactory;
import com.gradebook.factories.GradebookGeneratorFactory;

public class MainClass {
	public static void main(String argsp[]) {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String studentType = null;
		String outputType = null;
		List<String> availableOutputTypes = new ArrayList<>(Arrays.asList("html","xml","csv"));
		boolean resultOfReadAndProcess = false;
		boolean enableOutputMenu = false;
		boolean enableStudentMenu = true;
		while(enableStudentMenu) {
		System.out.println("Enter the student type \n 1. Graduate \n 2. Undergraduate \n");
		try {
			studentType = br.readLine();
			studentType = studentType.trim().toLowerCase();
			FactoryProducer producer = new FactoryProducer();
			GradebookFactory gradebookFactory = producer.getFactory(studentType);
			if(gradebookFactory == null) {
				System.out.println("Incorrect input. Please try again");
			}
			else {
				enableStudentMenu = false;
				if(studentType == "graduate") {
					resultOfReadAndProcess = gradebookFactory.readGrades("JSON");
				}
				else if(studentType == "undergraduate") {
					resultOfReadAndProcess = gradebookFactory.readGrades("XML");
				}
			}
			
			
		} catch (IOException e) {
			System.out.println("User input reading operation failed");
			e.printStackTrace();
		}
		catch (Exception e) {
			System.out.println("Failed operation. Please try again");
			e.printStackTrace();
		}
		
		}
		
		
		
					
		if(resultOfReadAndProcess) {
			enableOutputMenu = true;
			while(enableOutputMenu) {
				System.out.println("Enter the output format for gradebook. \n HTML \n CSV \n XML \n");
				try {
					outputType = br.readLine();
					if(! availableOutputTypes.contains(outputType.trim().toLowerCase()) ) {
						System.out.println("Unsupported format. Please try again");
					}
					else {
						enableOutputMenu = false;
						GradebookGeneratorFactory gradeGeneratorFactory = new GradebookGeneratorFactory();
						System.out.println("Going to generate grades for the student");
					}
					
				} catch (IOException e) {
					System.out.println("User input reading operation failed");
					e.printStackTrace();
				}
			}
		}
		else {
			System.out.println("Problem with the data set. Please check the input files and rerun the program");
			
		}		
		
		
	}

}
